{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","message","get","find","restaurants","findById","params","id","foodtruck","put","delete","remove","_id","newReview","title","text","review","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport FoodTruck from '../model/foodtruck';\nimport Review from '../model/review';\n\nimport { authenticate } from '../middleware/authmiddleware';\n\n\nexport default ({ config, db }) => {\n    let api = Router();\n\n    // CRUD \n\n    // '/v1/foodtruck/add' - Create\n    api.post('/add', authenticate, (req, res) => {\n        let newFoodTruck = new FoodTruck();\n        newFoodTruck.name = req.body.name;\n        newFoodTruck.foodtype = req.body.foodtype;\n        newFoodTruck.avgcost = req.body.avgcost;\n        newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\n\n        newFoodTruck.save(err => {\n            if (err) {\n                res.send(err);\n            }\n            res.json({ message: 'FoodTruck saved successfully' });\n        });\n    });\n\n    // '/v1/foodtruck' - Read\n    api.get('/', (req, res) => {\n        FoodTruck.find({}, (err, restaurants) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(restaurants);\n        });\n    });\n\n\n    // '/v1/foodtruck/:id' - Read 1\n    api.get('/:id', (req, res) => {\n        FoodTruck.findById(req.params.id, (err, foodtruck) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(foodtruck);\n        });\n    });\n\n    // '/v1/foodtruck/:id' - Update\n    api.put('/:id', authenticate, (req, res) => {\n        FoodTruck.findById(req.params.id, (err, foodtruck) => {\n            if (err) {\n                res.send(err);\n            }\n            foodtruck.name = req.body.name;\n            foodtruck.save(err => {\n                if (err) {\n                    res.send(err);\n                }\n                res.json({ message: \"FoodTruck info updated\" });\n            });\n        });\n    });\n\n    // '/v1/foodtruck/:id' - Delete\n    api.delete('/:id', authenticate, (req, res) => {\n        FoodTruck.remove({\n            _id: req.params.id\n        }, (err, foodtruck) => {\n            if(err) {\n                res.send(err);\n            }\n            res.json({ message: \"FoodTruck successfully removed\"});\n        });\n    });\n\n    // add review for a specific foodtruck id\n    // '/v1/foodtruck/reviews/add/:id'\n    api.post('/reviews/add/:id', authenticate, (req, res) => {\n        FoodTruck.findById(req.params.id, (err, foodtruck) => {\n            if (err) {\n                res.send(err);\n            }\n            let newReview = new Review();\n\n            newReview.title = req.body.title;\n            newReview.text = req.body.text;\n            newReview.foodtruck = foodtruck._id;\n            newReview.save((err, review) => {\n                if (err) {\n                    res.send(err);\n                }\n                foodtruck.reviews.push(newReview);\n                foodtruck.save(err => {\n                    if (err) {\n                        res.send(err);\n                    }\n                    res.json({ message: 'Food truck review saved!' });\n                });\n            });\n        });\n    });\n\n    // get reviews for a specific food truck id\n    // '/v1/foodtruck/reviews/:id'\n    api.get('/reviews/:id', (req,res) => {\n        Review.find({foodtruck: req.params.id}, (err, reviews) => {\n            if (err) {\n                return res.send(err);\n            }\n            return res.json(reviews);\n        });\n    });\n\n    // exercise extending api\n    // get all foodtrucks that have a certain food type\n    // '/v1/foodtruck/foodtype/:foodtype\n    api.get('/foodtype/:foodtype', (req, res) => {\n        FoodTruck.find({ foodtype: req.params.foodtype}, (err, foodtruck) => {\n            if (err) {\n                return res.send(err);\n            }\n            return res.json(foodtruck);\n        });\n    });\n\n    return api;\n}\n"]}